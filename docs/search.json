[{"path":"index.html","id":"intro-to-data-viz","chapter":"Intro to Data Viz","heading":"Intro to Data Viz","text":"","code":""},{"path":"index.html","id":"webinar-prep","chapter":"Intro to Data Viz","heading":"0.1 Webinar prep","text":"get webinar, R RStudio installed can follow along execute code device. welcome just listen get session play active role.currently R RStudio installed, produced guide install R Rstudio Windows Mac.R /RStudio installed, can follow guide update latest version workshop.technical issues install R RStudio machine (e.g., admin rights), can sign-RStudio Cloud account although interface little different desktop version used webinar.Please note able provide technical assistance webinar installation issues.done one :Work Intro R R Studio (section 1) introduce basic programming terminology install everything need follow along workshop. Depending upon familiarity R, take 1-2 hours.Familiarize data set using webinar reading associated paper Data International Multi-Centre Study Statistics Mathematics Anxieties Related Variables University Students (SMARVUS Dataset)Download data files - zip folder everything need. Unzip folder look Rmd file - ones use webinar.Browse FAQs responses questions submitted advance webinar includes links additional training materials learning R.","code":""},{"path":"index.html","id":"statement-on-ai-use","chapter":"Intro to Data Viz","heading":"0.2 Statement on AI use","text":"webinar online resource designed human (Emily Nordmann) augmented use ChatGPT4o, output verified said human.","code":""},{"path":"intro.html","id":"intro","chapter":"1 Intro to R and RStudio","heading":"1 Intro to R and RStudio","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"1 Intro to R and RStudio","heading":"1.1 Intended Learning Outcomes","text":"end chapter, learners able :Install R RStudioInstall add-packagesGet help packages functionsCreate objects writing running code consolePlease note completely new R, expect fully understand everything chapter getting comfortable coding take continued practice. However, get webinar familiarity basics.Download RStudio IDE Cheatsheet.","code":""},{"path":"intro.html","id":"intro-r-rstudio","chapter":"1 Intro to R and RStudio","heading":"1.2 R and RStudio","text":"R programming language write code RStudio Integrated Development Environment (IDE) makes working R easier. Think knowing English using plain text editor like NotePad write book versus using word processor like Microsoft Word. , much harder without things like spell-checking formatting able use advanced features Word developed. similar way, can use R without R Studio recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember although work using RStudio workshop, actually using two pieces software means time--time, may separate updates.","code":""},{"path":"intro.html","id":"rstudio_ide","chapter":"1 Intro to R and RStudio","heading":"1.2.1 RStudio","text":"installed R, gave computer ability process R programming language, also installed app called \"R\". never use app. Instead, use RStudio. RStudio arranged four window panes.\nFigure 1.1: RStudio IDE\ndefault, upper left pane source pane, view, write, edit code files view data tables spreadsheet format. first open RStudio, pane display open document load data - worry, get soon.lower left pane console pane, can type commands view output messages. can write code console test . code run can create objects environment, code saved. need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code. learn Help tab Section 1.6.3.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages (see Section 1.5), Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout.","code":""},{"path":"intro.html","id":"intro-reproducibility","chapter":"1 Intro to R and RStudio","heading":"1.2.2 Reproducibility","text":"One main reasons learn R can create reproducible reports. involves writing scripts transform data, create summaries visualisations, embed report way always gives results.things reproducibly, others (future ) can understand check work. can also reuse work easily. example, need create exam board report every semester student grades, reproducible report allows download new data create report within seconds. might take little longer set report first instance reproducible methods, time saves long run invaluable.Section ?? shows change two important settings global Options increase reproducibility. settings :Restore .RData workspace startup: CheckedNot CheckedSave workspace .RData exit: AlwaysNeverAsk","code":""},{"path":"intro.html","id":"themes-and-accessiblilty","chapter":"1 Intro to R and RStudio","heading":"1.2.3 Themes and accessiblilty","text":"can customise R Studio looks make work . Click Tools - Global Options - Appearance. can change default font, font size, general appearance R Studio, including using dark mode. Play around settings see prefer - going spend lot time R, might well look nice!","code":""},{"path":"intro.html","id":"intro-sessions","chapter":"1 Intro to R and RStudio","heading":"1.3 Sessions","text":"settings configured correctly, open RStudio start writing code, loading packages, creating objects, new session Environment tab completely empty. find code working figure , might worth restarting R session. clear environment detach loaded packages - think like restarting phone. several ways can restart R:Menu: Session > Restart RCmd-Shift-F10 Ctl-Shift-F10type .rs.restartR() consoleTry now. Additionally, now good time create notebook can keep record useful hints tips things try code working. Add \"restart R session\" notebook first item.","code":""},{"path":"intro.html","id":"functions","chapter":"1 Intro to R and RStudio","heading":"1.4 Functions","text":"install R access range functions including options data wrangling statistical analysis. functions included default installation typically referred base R can think like default apps come pre-loaded phone.function name refers code can reuse. using functions provided packages, can also write functions.type function console pane, run soon hit enter. put function script R Markdown document source pane, run run script, knit R Markdown file, run code chunk. learn workshop.example, function sum() included base R, expect. console, run code:","code":"\nsum(1,2,3)## [1] 6"},{"path":"intro.html","id":"packages","chapter":"1 Intro to R and RStudio","heading":"1.5 Packages","text":"One great things R, however, user extensible: anyone can create new add-extends functionality. currently thousands packages R users created solve many different kinds problems, just simply fun. example, packages data visualisation, machine learning, interactive dashboards, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install PokemonGo smartphone. main repository packages reside called CRAN, Comprehensive R Archive Network.important distinction installing package loading package.","code":""},{"path":"intro.html","id":"install-package","chapter":"1 Intro to R and RStudio","heading":"1.5.1 Installing a package","text":"done using install.packages(). like installing app phone: app remain installed remove . instance, want use PokemonGo phone, install App Store Play Store; re-install time want use . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.Install tidyverse package system. package main package use throughout book data wrangling, summaries, visualisation.get message says something like package ‘tidyverse’ successfully unpacked MD5 sums checked, installation successful. get error package installed, check troubleshooting section Appendix ??.Never install package inside script. console pane.can also install multiple packages . command install packages using webinarOnce devtools package, can also install packages repositories CRAN, github. following code installs development version package making waffle plots.","code":"\n# type this in the console pane\ninstall.packages(\"tidyverse\")\npackages <- c(\n  \"tidyverse\",  # for everything\n  \"patchwork\",  # for multi-part plots\n  \"jtools\",   \n  \"ggExtra\"    \n)\n\n# determine which need to be installed\nnew_packages <- packages[!packages %in% installed.packages()]\n\ninstall.packages(new_packages)\n# install intro to data viz package \ndevtools::install_github(\"psyteachr/introdataviz\")"},{"path":"intro.html","id":"loading-a-package","chapter":"1 Intro to R and RStudio","heading":"1.5.2 Loading a package","text":"done using library() function. like launching app phone: functionality app launched remains close app restart. example, run library(patchwork) within session, functions package referred patchwork made available R session. next time start R, need run library(patchwork) want access package.installing thetidyverse package, can load current R session follows:might get red text load package, normal. usually warning package functions name packages already loaded.can use convention package::function() indicate add-package function resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. package loaded using library(), specify package name function unless conflict (e.g., two packages loaded function name).","code":"\nlibrary(tidyverse)"},{"path":"intro.html","id":"tidyverse","chapter":"1 Intro to R and RStudio","heading":"1.5.3 Tidyverse","text":"tidyverseis meta-package loads several packages incredibly useful cleaning, processing, summarising, visualising almost type data:ggplot2, data visualisationreadr, data importtibble, tablestidyr, data tidyingdplyr, data manipulationstringr, stringsforcats, factorspurrr, repeating things","code":""},{"path":"intro.html","id":"using-functions","chapter":"1 Intro to R and RStudio","heading":"1.6 Using functions","text":"","code":""},{"path":"intro.html","id":"arguments","chapter":"1 Intro to R and RStudio","heading":"1.6.1 Arguments","text":"functions allow/require specify one morearguments. options can set. can look arguments/options function using help documentation. arguments required, optional. Optional arguments often use default (normally specified help documentation) enter value.example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. usage section, see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen. details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector 26 lower-case Latin letters).sample() generates random sample. time run code, generate different set random letters (try ). function set.seed() controls random number generator - using functions use randomness (sample()), running set.seed() ensure get result (many cases may want ). get numbers , run set.seed(1242016) console, run sample(x = letters, size = 5) .Now can change default value replace argument produce set letters allowed duplicates.time R still produced 5 random letters, now set letters two instances \"k\". Always remember use help documentation help understand arguments function requires.","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"z\" \"v\" \"y\" \"w\" \"j\"\nset.seed(8675309)\nsample(x = letters, size = 5, replace = TRUE)## [1] \"t\" \"k\" \"j\" \"k\" \"m\""},{"path":"intro.html","id":"argument-names","chapter":"1 Intro to R and RStudio","heading":"1.6.2 Argument names","text":"examples, written argument names code (.e., x, size, replace), however, strictly necessary. following two lines code produce result (although time run sample() produce slightly different result, random, still work ):Importantly, write argument names, R use default order arguments. sample assume first value enter x. second value size third value replace.write argument names can write arguments whatever order like:first learning R, may find useful write argument names can help remember understand part function . However, skills progress may find quicker omit argument names also see examples code online use argument names, important able understand argument bit code referring (look help documentation check).workshop, always write argument names first time use function. However, subsequent uses may omitted.","code":"\nsample(x = letters, size = 5, replace = TRUE)\nsample(letters, 5, TRUE)\nsample(size = 5, replace = TRUE, x = letters)"},{"path":"intro.html","id":"function-help","chapter":"1 Intro to R and RStudio","heading":"1.6.3 Function help","text":"load tidyverse automatically loads packages, however, can helpful know package function comes need Google . function base R loaded package, can type ?function_name console access help file. top help give function package name.package loaded, use ?package_name::function_name specify package help() function. sure package function , use shortcut ??function_name.Function help always organised way. example, look help ?stats::rnorm. top, tells name function package curly brackets, short description function, followed longer description. Usage section shows function arguments. arguments default values, shown like function(arg = default).Arguments section lists argument explanation. may Details section even detail functions. Examples section last, shows examples can run console window see function works.first argument mean function? trimna.rmmeanxWhat package read_excel ? readrreadxlbasestats","code":"\n# if the package is loaded\n?ggplot2\nhelp(\"ggplot2\")\n\n# works whether or not the package is loaded\n?ggplot2::ggplot\nhelp(\"ggplot\", package=\"ggplot2\") \n\n# shows a list of potentially matching functions\n??ggplot"},{"path":"intro.html","id":"tab-auto-complete","chapter":"1 Intro to R and RStudio","heading":"1.6.4 Tab auto-complete","text":"One useful feature R Studio tab auto-complete functions (see Figure 1.2). write name function press tab key, R Studio show arguments function takes along brief description. press enter argument name fill name , just like auto-complete phone. incredibly useful first learning R remember use feature frequently.\nFigure 1.2: Tab auto-complete\n","code":""},{"path":"intro.html","id":"objects","chapter":"1 Intro to R and RStudio","heading":"1.7 Objects","text":"large part coding involve creating manipulating objects. Objects contain stuff. stuff can numbers, words, result operations analyses. assign content object using <-.Run following code console, change values name age details change christmas holiday date care .see four objects now appear environment pane:name character (text) data. order R recognise character data, must enclosed double quotation marks \" \".age numeric data. order R recognise number, must enclosed quotation marks.today stores result function Sys.Date(). function returns computer system's date. Unlike name age, hard-coded (.e., always return values enter), contents object today change dynamically date. , run function tomorrow, update date tomorrow's date.christmas also date hard-coded specific date. wrapped within .Date() function tells R interpret character string provide date rather text.print contents object, type object's name console press enter. Try printing four objects now.Finally, key concept understand objects can interact can save results interactions new object. Edit run following code create new objects, print contents new object.","code":"\nname <- \"Emily\"\nage <- 39\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2025-12-25\")\ndecade <- age + 10\nfull_name <- paste(name, \"Nordmann\")\nhow_long <- christmas - today"},{"path":"intro.html","id":"help","chapter":"1 Intro to R and RStudio","heading":"1.8 Getting help","text":"feel like need lot help starting learn. really go away; impossible memorise everything. goal learn enough structure R can look things quickly. introduce specialised jargon glossary; easier google \"convert character numeric R\" \"make numbers quotes actual numbers words\". addition function help described , additional resources use often.","code":""},{"path":"intro.html","id":"package-reference-manuals","chapter":"1 Intro to R and RStudio","heading":"1.8.1 Package reference manuals","text":"Start help browser entering help.start() console. Click \"Packages\" \"Reference\" see list packages. Scroll readxl package click see list functions available package.","code":""},{"path":"intro.html","id":"ai","chapter":"1 Intro to R and RStudio","heading":"1.8.2 AI","text":"Large Language models fantastic resource help coding journey must use criticially, without strong foundations core knowledge skills, can dangerous. written companion book AI TutoR takes use AI personal tutor pair programmer.","code":""},{"path":"intro.html","id":"googling","chapter":"1 Intro to R and RStudio","heading":"1.8.3 Googling","text":"function help help, even sure function need, try Googling question. take practice able use right jargon search terms get want. helps put \"R\" \"tidyverse\" search text, name relevant package, like ggplot2.","code":""},{"path":"intro.html","id":"vignettes","chapter":"1 Intro to R and RStudio","heading":"1.8.4 Vignettes","text":"Many packages, especially tidyverse ones, helpful websites vignettes explaining use functions. vignettes also available inside R. can access package's help page vignette() function.","code":"\n# opens a list of available vignettes\nvignette(package = \"ggplot2\")\n\n# opens a specific vignette in the Help pane\nvignette(\"ggplot2-specs\", package = \"ggplot2\")"},{"path":"intro.html","id":"workshop-prep","chapter":"1 Intro to R and RStudio","heading":"1.9 Webinar set-up check","text":"Restart R session run code copying pasting console hitting enter. managed install update software packages required, run without issue produce histograms. produce messages look like errors involving stat_bin, worry, errors explain messages mean workshop.get error package called..., make sure installed packages listed Section 1.5.1.technical issues working machine get code run, please use RStudio Cloud workshop time troubleshoot installation problems.","code":"\nlibrary(tidyverse)\nlibrary(jtools)\nlibrary(patchwork)\n\ndata(starwars)\n\nmass <- ggplot(starwars, aes(x = mass)) +\n  geom_histogram() +\n  theme_apa() +\n  labs(title = \"Star Wars\", \n       subtitle = \"Character Mass (Kg)\",\n       x = NULL, y = NULL)\n\nheight <- ggplot(starwars, aes(x = height)) +\n  geom_histogram() +\n  theme_apa() +\n  labs(subtitle = \"Character Height (cm)\",\n       x = NULL, y = NULL)\n\nmass + height"},{"path":"intro.html","id":"resources-intro","chapter":"1 Intro to R and RStudio","heading":"1.10 Further Resources","text":"RStudio IDE CheatsheetRStudio Cloud","code":""},{"path":"webinar.html","id":"webinar","chapter":"2 Webinar","heading":"2 Webinar","text":"Please make sure downloaded data files. Unzip folder use Rmd file contains code written chapter space make notes.","code":""},{"path":"webinar.html","id":"set-up","chapter":"2 Webinar","heading":"2.1 Set-up","text":"dataset massive going look just four different scales. webinar time cover interested, comments tell (ask AI explain well).code creates four objects:demo demographic information, age, gender, degree major. Age data categorised anonymisation purposes. option 'Implausible' describes values 99 higher 17 lower.demo demographic information, age, gender, degree major. Age data categorised anonymisation purposes. option 'Implausible' describes values 99 higher 17 lower.STARS - Statistics anxiety measured Statistics Anxiety Rating Scale (STARS; Cruise et al., 1985). item describes situation involving statistics “examination statistics course” (test class anxiety), “Interpreting meaning table journal article” (interpretation anxiety), “Going ask statistics teacher individual help material difficulty understanding” (fear asking help).STARS - Statistics anxiety measured Statistics Anxiety Rating Scale (STARS; Cruise et al., 1985). item describes situation involving statistics “examination statistics course” (test class anxiety), “Interpreting meaning table journal article” (interpretation anxiety), “Going ask statistics teacher individual help material difficulty understanding” (fear asking help).BNFE - Fear Negative Evaluation. Fear negative evaluation measured using Brief Fear Negative Evaluation Scale – Straightforward (BNFE-S; Leary, 1983; Rodebaugh et al., 2004). scale contains 8 items, including statements , “afraid people find fault ” “often worry say wrong things”.BNFE - Fear Negative Evaluation. Fear negative evaluation measured using Brief Fear Negative Evaluation Scale – Straightforward (BNFE-S; Leary, 1983; Rodebaugh et al., 2004). scale contains 8 items, including statements , “afraid people find fault ” “often worry say wrong things”.IUS - Intolerance Uncertainty. Intolerance uncertainty measured using Intolerance Uncertainty Scale – Short Form (IUS-SF; Carleton et al., 2007). scale contains 2 subscales, Prospective Anxiety Inhibitory Anxiety, 6 items. Prospective Anxiety subscale includes statements , “smallest doubt can stop acting”. Inhibitory Anxiety subscale includes statements , “frustrates information need”.IUS - Intolerance Uncertainty. Intolerance uncertainty measured using Intolerance Uncertainty Scale – Short Form (IUS-SF; Carleton et al., 2007). scale contains 2 subscales, Prospective Anxiety Inhibitory Anxiety, 6 items. Prospective Anxiety subscale includes statements , “smallest doubt can stop acting”. Inhibitory Anxiety subscale includes statements , “frustrates information need”.three scales, code takes responses individual item generates single mean score participant.","code":"\nlibrary(tidyverse)\nlibrary(jtools)\nlibrary(ggExtra)\ndat <- read_csv(\"smarvus_complete_050524.csv\")\ndemo <- dat %>%\n  select(unique_id, age, gender, degree_major)\n\nSTARS <- dat %>%\n  select(unique_id, Q7.1_1:Q7.1_24) %>% # select the STARS columns\n  filter(Q7.1_24 == 1) %>% # remove those who failed the attention check\n  select(-Q7.1_24) %>% # remove the attention check column\n  pivot_longer(cols = Q7.1_1:Q7.1_23, names_to = \"item\", values_to = \"score\") %>% # transform to long-form\n  group_by(unique_id) %>% # group by participant\n  summarise(stars_score = mean(score, na.rm = TRUE)) %>% # calculate mean STARS score for each ppt\n  ungroup() %>% # ungroup so it doesn't mess things up later\n  drop_na() #  get rid of NAs so they don't cause us havoc\n\n# Brief Fear of Negative Evaluation Scale\n\nBNFE <- dat %>%\n  select(unique_id, Q11.1_1:Q11.1_9) %>% # select the BNFE columns\n  filter(Q11.1_9 == 3) %>% # remove those who failed the attention check\n  select(-Q11.1_9) %>% # remove the attention check column\n  pivot_longer(cols = Q11.1_1:Q11.1_8, names_to = \"item\", values_to = \"score\") %>% # transform to long-form\n  group_by(unique_id) %>% # group by participant\n  summarise(bnfe_score = mean(score, na.rm = TRUE)) %>% # calculate mean BNFE score for each ppt\n  ungroup() %>% # ungroup so it doesn't mess things up later\n  drop_na() #  get rid of NAs so they don't cause us havoc\n\n# Intolerance of Uncertainty.\n\nIUS <- dat %>%\n  select(unique_id, Q14.1_1:Q14.1_12) %>% # select the BNFE columns\n  pivot_longer(cols = Q14.1_1:Q14.1_12, names_to = \"item\", values_to = \"score\") %>% # transform to long-form\n  group_by(unique_id) %>% # group by participant\n  summarise(ius_score = mean(score, na.rm = TRUE)) %>% # calculate mean IUS-SF score for each ppt\n  ungroup() %>% # ungroup so it doesn't mess things up later\n  drop_na() #  get rid of NAs so they don't cause us havoc\n\n# join everything together\n\ndat_joined <- inner_join(x = demo, y = STARS, by = \"unique_id\") %>%\n  inner_join(BNFE, by = \"unique_id\") %>%\n  inner_join(IUS, by = \"unique_id\")\n\n# convert categorical data to factors\n\ndat_joined <- dat_joined %>%\n  mutate(age = as.factor(age),\n         gender = as.factor(gender),\n         degree_major = as.factor(degree_major))\n\n# take a subset of the data because some groups have very small sample sizes\n\ndat_final <- dat_joined %>%\n  filter(gender %in% c(\"Female/Woman\", \"Male/Man\")) %>%\n  mutate(age = case_when(age == \"18-21\" ~ \"18-21\",\n                         age == \"22-25\" ~ \"22+\",\n                         age == \"26+\" ~ \"22+\")) %>%\n  drop_na(age)\n\n# remove all the objects we don't need \n\nrm(list = c(\"BNFE\", \"dat\", \"dat_joined\", \"demo\", \"IUS\", \"STARS\"))"},{"path":"webinar.html","id":"the-grammar-of-graphics","chapter":"2 Webinar","heading":"2.2 The Grammar of Graphics","text":"ggplot2 package based Grammar Graphics, theoretical framework developed Leland Wilkinson (2005), describes statistical graphics constructed layered modular set components. approach treats graphics visual language, plot built combining several independent elements data, mappings (aesthetic relationships data visual properties), geometric objects, statistical transformations, coordinate systems, themes.core, ggplot2 requires least three elements:\n1. dataset, containing variables interest.\n2. Aesthetics (aes()), map variables dataset visual properties position, colour, size, shape.\n3. Geometric objects (geoms), specify kind plot draw—e.g., bars, points, lines, boxplots.Together, components form flexible system allows users build complex meaningful data visualisations structured way. example:modular design encourages users think critically story want data tell construct visualisations analytically rigorous aesthetically effective (Healy, 2018). also facilitates reproducibility clarity data science workflows, component plot explicitly stated code.","code":"\n# the base\nggplot()\n# adding in data set\nggplot(data = dat_final, aes(x = stars_score))\n# adding layers\nggplot(data = dat_final, aes(x = stars_score)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# adding more layers\nggplot(data = dat_final, aes(stars_score)) +\n  geom_histogram() +\n  labs(title = \"My first histogram\",\n       x = \"Mean STARS score\",\n       caption = \"Isn't R fun\")## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"webinar.html","id":"plot-types","chapter":"2 Webinar","heading":"2.3 Plot types","text":"","code":""},{"path":"webinar.html","id":"one-categorical-variable","chapter":"2 Webinar","heading":"2.3.1 One categorical variable","text":"single categorical variable, bar chart typically appropriate way visualise frequency (.e., count) category. ggplot2, achieved using geom_bar(), default counts number observations category plots counts bars.","code":""},{"path":"webinar.html","id":"important-note","chapter":"2 Webinar","heading":"2.3.1.1 Important note:","text":"geom_bar() confused geom_col(). geom_bar() calculates y-values (counts) automatically, geom_col() requires supply x y values explicitly, typically used plotting summary statistics (e.g., means, proportions).","code":""},{"path":"webinar.html","id":"why-we-do-not-plot-means-for-a-single-categorical-variable","chapter":"2 Webinar","heading":"2.3.1.2 Why we do not plot means for a single categorical variable:","text":"common mistake try use bar chart visualise mean numeric variable category. approach often discouraged bar heights suggest frequencies, lack distributional information (e.g., variability sample size) can misleading. Instead, wish compare numeric outcome across groups, better options include:\n- Boxplots: Show medians, quartiles, potential outliers.\n- Violin plots: Combine density estimation summary statistics.\n- Dotplots jittered points: Especially helpful sample sizes small.said, purely categorical data—visualising many students enrolled degree programme many participants identify particular gender—bar charts simple effective.","code":"\nggplot(dat_final, aes(x = degree_major)) +\n  geom_bar()"},{"path":"webinar.html","id":"one-continuous-variable","chapter":"2 Webinar","heading":"2.3.2 One continuous variable","text":"single continuous variable, one informative commonly used visualisations histogram. Histograms show distribution continuous variable dividing range values intervals, known bins, counting many observations fall bin. resulting bars provide visual summary shape, centre, spread data.","code":""},{"path":"webinar.html","id":"considerations-when-choosing-bin-width","chapter":"2 Webinar","heading":"2.3.2.1 Considerations when choosing bin width","text":"choice bin width crucial. bin width large can obscure important features distribution, multimodality skewness. Conversely, bin width small may introduce much noise, creating fragmented plot difficult interpret.Histograms best suited exploratory data analysis, allowing researchers assess:\n- Whether distribution symmetric, skewed, multimodal,\n- presence outliers gaps,\n- approximate range density values.visualisation single variable, histograms serve critical first step understanding structure data.","code":"\nggplot(data = dat_final, aes(stars_score)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0, \n                 colour = \"black\",\n                 fill = \"lightblue\") "},{"path":"webinar.html","id":"one-continuous-one-categorical-variable","chapter":"2 Webinar","heading":"2.3.3 One Continuous, One Categorical Variable","text":"visualising relationship continuous variable categorical variable, goal typically compare distribution continuous variable across levels categorical variable. Several types plots can used purpose, offering different advantages depending nature data story one wishes tell.One common informative options boxplot. boxplot provides compact summary distribution continuous variable within category. shows median, interquartile range, potential outliers, allowing quick visual comparisons central tendency spread groups. Boxplots particularly useful comparing several groups side side, less sensitive skewness extreme values visualisations.alternative violin plot, builds upon boxplot incorporating mirrored density plot side box. adds information shape distribution, including multimodality, still retaining median interquartile range. Violin plots well suited larger datasets, estimation density stable.Another option histogram stratified group. can implemented one several ways:\n- overlaying histograms using colour transparency,\n- “dodging” bars place side side, \n- using faceting produce separate plot group.approaches trade-offs. Overlaid histograms can obscure data number groups large distributions overlap substantially. Dodged histograms make group comparisons easier may misrepresent frequency bins align differently groups. Faceting, group displayed separate panel, provides clearest visual separation makes direct comparisons slightly difficult unless axes held constant.Finally, density plots serve similar purpose histograms offer smooth, continuous estimate distribution. stratified categorical variable, density plots effective assessing overlap, skewness, differences modality groups. However, unlike histograms, density plots represent actual counts frequencies, interpretation may less intuitive novice audiences.choosing among options, one consider sample size, shape variability data, intended audience. smaller samples, granular plots jittered points dot plots may appropriate. larger samples, density-based methods summaries boxplots violins become effective.Understanding visualise continuous variable across groups fundamental comparing subpopulations, evaluating treatment effects, identifying systematic differences observational data.","code":""},{"path":"webinar.html","id":"grouped-histograms","chapter":"2 Webinar","heading":"2.3.3.1 Grouped histograms","text":"","code":"\n# grouped by colour\nggplot(dat_final, aes(x = stars_score, fill = gender)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0)\n# dodged bars\nggplot(dat_final, aes(x = stars_score, fill = gender)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0,\n                 position = \"dodge\")\n# faceted histogram\nggplot(dat_final, aes(x = stars_score)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0) +\n  facet_wrap(~gender, nrow = 2, scales = \"free_y\")"},{"path":"webinar.html","id":"density-plots","chapter":"2 Webinar","heading":"2.3.3.2 Density plots","text":"","code":"\nggplot(data = dat_final, aes(x = stars_score, fill = gender)) +\n  geom_density(alpha = .4)"},{"path":"webinar.html","id":"boxplots","chapter":"2 Webinar","heading":"2.3.3.3 Boxplots","text":"","code":"\nggplot(dat_final, aes(x = gender, y = stars_score)) +\n  geom_boxplot()"},{"path":"webinar.html","id":"violin-plots","chapter":"2 Webinar","heading":"2.3.3.4 Violin plots","text":"","code":"\nggplot(dat_final, aes(x = gender, y = stars_score)) +\n  geom_violin()"},{"path":"webinar.html","id":"violin-boxplots","chapter":"2 Webinar","heading":"2.3.3.5 Violin-boxplots","text":"order layers matters!","code":"\nggplot(dat_final, aes(x = gender, y = stars_score)) +\n  geom_violin() +\n  geom_boxplot(width = .2)"},{"path":"webinar.html","id":"two-continuous-variables","chapter":"2 Webinar","heading":"2.3.4 Two Continuous Variables","text":"working two continuous variables, primary objective visualisation explore relationship association. commonly used plot purpose scatterplot, places one variable x-axis y-axis, point representing single observation.Scatterplots particularly valuable assessing form, direction, strength relationships two variables. Patterns data—linear non-linear trends, clusters, outliers—can often detected visually formal statistical modelling applied. positively sloped pattern, example, may suggest direct relationship variables, negatively sloped one may indicate inverse relationship. Curvilinear segmented trends may suggest complex interactions warrant exploration.One common extension basic scatterplot involves addition fitted line, linear regression line, summarise general trend data. can assist viewers interpreting relationship easily, especially raw data points numerous variable. confidence interval often included around line provide visual sense uncertainty estimated trend.many cases, also informative introduce third variable, typically categorical variable, visualisation using colour shape. enables examination whether relationship two continuous variables differs across groups. example, one might investigate whether association anxiety uncertainty varies gender age group. grouped scatterplots especially powerful investigating interactions potential moderating effects.However, introducing grouping variables requires caution. Overplotting—many points obscure one another—can make visualisation difficult interpret. cases, techniques transparency (alpha blending), point jittering, use smaller point sizes can improve readability. Alternatively, faceting may used split plot panels group, allowing clear, group-specific visualisations preserving structure original scatterplot.","code":""},{"path":"webinar.html","id":"scatterplots","chapter":"2 Webinar","heading":"2.3.4.1 Scatterplots","text":"","code":"\n# simple scatterplot\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point()\n# add line of best fit\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'\n# add in a grouping variable to all geoms\nggplot(dat_final, aes(x = stars_score, y = ius_score, colour = gender)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'\n# add in a grouping variable to one geom\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(aes(colour = gender), method = \"lm\")## `geom_smooth()` using formula = 'y ~ x'"},{"path":"webinar.html","id":"making-it-look-nice","chapter":"2 Webinar","heading":"2.4 Making it look nice","text":"","code":""},{"path":"webinar.html","id":"titles-and-labels","chapter":"2 Webinar","heading":"2.4.1 Titles and labels","text":"Clear descriptive titles axis labels essential effective data visualisation. help viewer interpret plot accurately quickly. well-chosen title conveys main message plot, subtitles can provide additional context interpretative guidance, indicating nature direction relationship.Axis labels clearly identify variables plotted include appropriate units applicable. Avoid abbreviations overly technical terms unless familiar audience. Good labelling ensures visualisations can understood without requiring explanation presenter accompanying text.labs() function ggplot2 allows specify title, subtitle, axis labels, caption, legend titles, single place. function used part consistent practice annotating plots clearly professionally.","code":"\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Relationship between IUS and STARS\",\n       subtitle = \"Positive correlation\",\n       x = \"Statistics Anxiety Score\",\n       y = \"Intolerance of Uncertainity Score\")## `geom_smooth()` using formula = 'y ~ x'"},{"path":"webinar.html","id":"adding-a-theme","chapter":"2 Webinar","heading":"2.4.2 Adding a theme","text":"Themes ggplot2 control non-data elements plot—background colour, gridlines, font size, margins, axis line styles. default, ggplot2 applies theme_grey() theme, uses grey background white gridlines. functional, themes can often improve clarity align better publication standards.choice theme can substantial impact visual appeal readability plot. example, theme_minimal() offers clean, white background minimal distraction, making ideal presentations teaching. theme_classic() provides traditional, academic appearance, resembling hand-drawn plots older textbook figures. Alternatively, theme_apa() jtools package adheres American Psychological Association's publication style, particularly helpful psychology related disciplines.Consistent use themes across plots project presentation contributes professional cohesive visual identity. also helps focus viewer’s attention data, rather stylistic inconsistencies extraneous visual elements.","code":"\n# theme_minimal from ggplot\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Relationship between IUS and STARS\",\n       subtitle = \"Positive correlation\",\n       x = \"Statistics Anxiety Score\",\n       y = \"Intolerance of Uncertainity Score\") +\n  theme_minimal()## `geom_smooth()` using formula = 'y ~ x'\n# theme_classic from ggplot\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Relationship between IUS and STARS\",\n       subtitle = \"Positive correlation\",\n       x = \"Statistics Anxiety Score\",\n       y = \"Intolerance of Uncertainity Score\") +\n  theme_classic()## `geom_smooth()` using formula = 'y ~ x'\n# apa theme from jtools\nggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Relationship between IUS and STARS\",\n       subtitle = \"Positive correlation\",\n       x = \"Statistics Anxiety Score\",\n       y = \"Intolerance of Uncertainity Score\") +\n  theme_apa()## `geom_smooth()` using formula = 'y ~ x'"},{"path":"webinar.html","id":"adding-colour","chapter":"2 Webinar","heading":"2.4.3 Adding colour","text":"Colour powerful tool data visualisation, capable highlighting group differences, drawing attention key patterns, improving interpretability. However, must used judiciously. introducing colour, important ensure adds meaningful information create unnecessary visual clutter redundancy.many cases, default behaviour ggplot2 include colour legend grouping variable mapped aesthetic fill colour. grouping already evident axis (e.g., grouping shown along x-axis), legend may redundant. Removing can make plot cleaner space-efficient, particularly slide-based publication formats.Colour choice also take accessibility account. example, using colour-blind friendly palette, \"Dark2\" RColorBrewer package, ensures plots interpretable wider audience, including common forms colour vision deficiency. critical consideration inclusive teaching communication.Finally, default palettes meet presentational needs aesthetic preferences analyst, colours can specified manually. provides full control visual appearance particularly useful aligning plots institutional branding publication requirements.","code":"\n# add colour, remove legend\nggplot(dat_final, aes(x = gender, y = stars_score, fill = gender)) +\n  geom_boxplot() +\n  guides(fill = \"none\")\n# use a colour blind friendly palette\n\nggplot(dat_final, aes(x = gender, y = stars_score, fill = gender)) +\n  geom_boxplot() +\n  guides(fill = \"none\") +\n  scale_fill_brewer(palette = \"Dark2\")\n# specify colour manually\n\nggplot(dat_final, aes(x = gender, y = stars_score, fill = gender)) +\n  geom_boxplot() +\n  guides(fill = \"none\") +\n  scale_fill_manual(values = c(\"darkgrey\", \"lightblue\"))"},{"path":"webinar.html","id":"editing-the-scale","chapter":"2 Webinar","heading":"2.4.4 Editing the scale","text":"Scale functions ggplot2 control data values mapped visual properties position, colour, size. used thoughtfully, editing scale can significantly improve interpretability precision plot.One common modification adjusting breaks axis. allows analyst specify exactly tick marks appear, can aid interpretation consistency across plots—especially comparing multiple figures side side. example, specifying regular intervals (e.g., every 0.5 units) continuous scale can make trends apparent reduce cognitive load viewer.addition breaks, axis labels may need edited improve clarity accessibility. categorical axes, often involves renaming factor levels use plain language inclusive terminology. However, important ensure order labels matches underlying factor levels data avoid unintended mismatches misinterpretation.Another common modification setting limits scale, controls minimum maximum values displayed axis. can useful focusing viewer’s attention relevant range ensuring multiple plots share axis limits valid comparison. said, limits chosen carefully avoid omitting important data misleading viewer exaggerating minimising differences.","code":"\n# change the breaks\nggplot(data = dat_final, aes(stars_score)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0, \n                 colour = \"black\",\n                 fill = \"lightblue\") +\n  scale_x_continuous(breaks = seq(from = 1, to = 5, by = 0.5))\n# changing the labels - be careful of order!\nggplot(dat_final, aes(x = gender, y = stars_score, fill = gender)) +\n  geom_boxplot() +\n  guides(fill = \"none\") +\n  scale_fill_manual(values = c(\"darkgrey\", \"lightblue\")) +\n  scale_x_discrete(labels = c(\"Woman\", \"Man\"))\n# changing the limits\nggplot(data = dat_final, aes(stars_score)) +\n  geom_histogram(binwidth = .25, \n                 boundary = 0, \n                 colour = \"black\",\n                 fill = \"lightblue\") +\n  scale_x_continuous(limits = c(0,6))"},{"path":"webinar.html","id":"going-a-bit-wild","chapter":"2 Webinar","heading":"2.5 Going a bit wild","text":"","code":"\n# changing the labels - be careful of order!\nggplot(dat_final, aes(x = gender, y = stars_score, fill = gender)) +\n  geom_jitter(width = .25, height = .2, alpha = .2) +\n  geom_violin(alpha =.4) +\n  geom_boxplot() +\n  stat_summary(fun = \"mean\", geom = \"point\", size =2) +\n  stat_summary(fun.data = \"mean_se\", geom = \"errorbar\", width = .2)+\n  guides(fill = \"none\") +\n  scale_fill_manual(values = c(\"darkgrey\", \"lightblue\")) +\n  scale_x_discrete(labels = c(\"Woman\", \"Man\"))+\n  labs(title = \"Gender differences in statistics anxiety\",\n       x = \"Gender\",\n       y = \"Statistics Anxiety Score\") +\n  theme_apa()+\n  annotate(geom = \"text\",\n           label = \"Maybe we need DEI after all\",\n           x = 1.5, y = 3.5,\n           hjust = 0, vjust = 1, \n           color = \"black\", fontface = \"bold\",\n           angle = 45) \n# marginal histograms\np <- ggplot(dat_final, aes(x = stars_score, y = ius_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Relationship between IUS and STARS\",\n       subtitle = \"Positive correlation\",\n       x = \"Statistics Anxiety Score\",\n       y = \"Intolerance of Uncertainity Score\") +\n  theme_apa() \n\nggMarginal(p, type = \"histogram\")## `geom_smooth()` using formula = 'y ~ x'\n## `geom_smooth()` using formula = 'y ~ x'\n## `geom_smooth()` using formula = 'y ~ x'"},{"path":"faqs.html","id":"faqs","chapter":"3 FAQs","heading":"3 FAQs","text":"webinar, given opportunity ask questions. responses frequent.","code":""},{"path":"faqs.html","id":"why-should-i-use-r-for-data-viz","chapter":"3 FAQs","heading":"3.0.1 Why should I use R for data viz?","text":"going entirely plagiarism paper: Data Visualization Using R Researchers Use RData visualization benefits advantages statistical analysis writing code rather using point--click software—reproducibility transparency. need psychological researchers work reproducible ways well documented discussed response replication crisis (e.g., Munafò et al., 2017), repeat arguments . However, additional benefit reproducibility less frequently acknowledged compared loftier goals improving psychological science: write code produce plots, can reuse adapt code future rather starting scratch time.addition benefits reproducibility, using R data visualization gives researcher almost total control element plot. Although flexibility can seem daunting first, ability write reusable code recipes (use recipes created others) highly advantageous. level customization professional outputs available using R , instance, led news outlets BBC (BBC Visual Data Journalism, 2019) New York Times (Bertini & Stefaner, 2015) adopt R preferred data-visualization tool.\"","code":""},{"path":"faqs.html","id":"what-are-the-best-resources-for-learning-r-as-a-beginner","chapter":"3 FAQs","heading":"3.0.2 What are the best resources for learning R as a beginner?","text":"complete beginner psychology, can recommend PsyTeachR collection:Data Skills 1st year undergrad course slow introduction working R, data wrangling, descriptives, data vizAnalysis 2nd year UG resource introduce inferential stats: chi-square, correlation, t-test, ANOVA, regressionStatistical models 3rd year UG resource goes full GLM introduces mixed effect modelsFundamentals Quantitative Analysis one-year conversion course resource compressed version 1st 2nd year coverage.Applied data skills go inferential stats,instead deep dive producing reproducible reports, data wrangling, transformation, data viz.resources written team:R Data Science","code":""},{"path":"faqs.html","id":"what-are-the-best-resources-specifically-for-data-viz","chapter":"3 FAQs","heading":"3.0.3 What are the best resources specifically for data viz?","text":"Fundamentals Data VisualizationData Visualization: practical introductionBBC Visual Data Journalism cookbook R graphicsThe R Graph Galleryggplot2: Elegant Graphics Data Analysis (3e)","code":""},{"path":"faqs.html","id":"how-can-i-use-ai-to-help-me-learn-to-code","chapter":"3 FAQs","heading":"3.0.4 How can I use AI to help me learn to code/","text":"written companion book: AITutoR","code":""},{"path":"faqs.html","id":"how-do-you-teach-undergraduates-r","chapter":"3 FAQs","heading":"3.0.5 How do you teach undergraduates R?","text":"links resources show materials allhave Creative Commons licence can adpat reuse . also given talk approach broadly regarding teaching reproducible data skills: slides .","code":""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit (DeBruine, 2021), provide link license, indicate changes made. adapt material, must distribute contributions license original.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
